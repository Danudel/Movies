[{"/home/lioz/Desktop/movie-app/src/index.js":"1","/home/lioz/Desktop/movie-app/src/App.js":"2","/home/lioz/Desktop/movie-app/src/reportWebVitals.js":"3","/home/lioz/Desktop/movie-app/src/data-models/Actor.js":"4","/home/lioz/Desktop/movie-app/src/components/ActorsView.js":"5"},{"size":543,"mtime":1610484209374,"results":"6","hashOfConfig":"7"},{"size":691,"mtime":1610731898293,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610279515465,"results":"9","hashOfConfig":"7"},{"size":803,"mtime":1610729287001,"results":"10","hashOfConfig":"7"},{"size":2343,"mtime":1610728307863,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"643eqg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/lioz/Desktop/movie-app/src/index.js",[],["24","25"],"/home/lioz/Desktop/movie-app/src/App.js",["26"],"/home/lioz/Desktop/movie-app/src/reportWebVitals.js",[],"/home/lioz/Desktop/movie-app/src/data-models/Actor.js",[],"/home/lioz/Desktop/movie-app/src/components/ActorsView.js",["27"],"import React from 'react';\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button';\nimport { CardDeck, Col } from 'react-bootstrap';\n\n\n\nclass Actors extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filteredSearch: '',\n        }\n    }\n\n\n\n    handleSearch = (e) => {\n        this.setState({\n            filteredSearch: e.target.value\n        })\n    }\n\n    filteredActors = () => {\n        return this.state.actors.filter(actor => {\n            return actor.fname.toLowerCase().includes(this.state.filteredSearch.toLowerCase())\n        })\n    }\n\n\n    render() {\n        const ActorsCards = []; \n        for (let i = 0; i < this.props.actors.length; i++) {\n            let fullname= this.props.actors[i].fname+this.props.actors[i].lname;\n            fullname= fullname.toLowerCase();\n            if (! fullname.includes(this.state.filteredSearch)){\n                continue\n            }\n            const cardContent = \n                <Col sm={4} style={{padding: '25px'}}>\n                    <Card style={{ borderRadius: 15, height: '40rem', width: '20rem' }}>\n                        <Card.Img variant=\"top\" src={this.props.actors[i].img} />\n                        <Card.Body>\n                            <Card.Title>{this.props.actors[i].fname} {this.props.actors[i].lname}</Card.Title>\n                            <Card.Text>Age: {this.props.actors[i].age()}</Card.Text>\n                            <a target=\"_blank\" href={this.props.actors[i].imdb}>\n                                 <Button variant=\"outline-dark\" >Go to IMDB</Button>\n                            </a>\n                        </Card.Body>\n                    </Card> \n            </Col>\n            ActorsCards.push(cardContent);\n        }\n        return (\n            <div>\n                <h1 style={{fontFamily:'cursive', fontWeight: 'bold', textAlign: 'center'}} >Actors Gallery</h1>\n                <div style={{ textAlign: 'center' }} >   \n                    <input label='Filter Actors: ' placeholder='Enter actor name' value={this.state.filteredSearch} onChange={this.handleSearch} />\n                </div>\n                < CardDeck >        \n                    {ActorsCards} \n                </CardDeck>\n            </div>\n            )\n    }\n}\n\nexport default Actors;\n\n\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":4,"column":8,"nodeType":"34","messageId":"35","endLine":4,"endColumn":13},{"ruleId":"36","severity":1,"message":"37","line":46,"column":29,"nodeType":"38","endLine":46,"endColumn":81},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Actor' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]